// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(BackendContext))]
    [Migration("20250901080030_m1")]
    partial class m1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.ActividadFisica", b =>
                {
                    b.Property<int>("IdActividad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdActividad"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdActividad");

                    b.ToTable("ActividadesFisicas");
                });

            modelBuilder.Entity("Backend.Models.Comida", b =>
                {
                    b.Property<int>("IdComida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComida"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<int>("IdPlan")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdComida");

                    b.HasIndex("IdPlan");

                    b.ToTable("Comidas");
                });

            modelBuilder.Entity("Backend.Models.Consulta", b =>
                {
                    b.Property<int>("IdConsulta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdConsulta"));

                    b.Property<decimal?>("Costo")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("DisplayInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ExamenFisico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdNutricionista")
                        .HasColumnType("int");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sintomas")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdConsulta");

                    b.HasIndex("IdNutricionista");

                    b.HasIndex("IdPaciente");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("Backend.Models.Diagnostico", b =>
                {
                    b.Property<int>("IdDiagnostico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDiagnostico"));

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdConsulta")
                        .HasColumnType("int");

                    b.HasKey("IdDiagnostico");

                    b.HasIndex("IdConsulta");

                    b.ToTable("Diagnosticos");
                });

            modelBuilder.Entity("Backend.Models.HistorialMedico", b =>
                {
                    b.Property<int>("IdHistorialMedico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorialMedico"));

                    b.Property<string>("Alergias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Enfermedad")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("FechaCuracion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaDiagnostico")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.Property<string>("Intolerancias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medicamentos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tratamiento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHistorialMedico");

                    b.HasIndex("IdPaciente");

                    b.ToTable("HistorialesMedicos");
                });

            modelBuilder.Entity("Backend.Models.HistorialPaciente", b =>
                {
                    b.Property<int>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorial"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IMC")
                        .HasColumnType("decimal(4,1)");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(6,2)");

                    b.Property<decimal>("Talla")
                        .HasColumnType("decimal(3,2)");

                    b.HasKey("IdHistorial");

                    b.HasIndex("IdPaciente");

                    b.ToTable("HistorialesPacientes");
                });

            modelBuilder.Entity("Backend.Models.Nutricionista", b =>
                {
                    b.Property<int>("IdNutricionista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNutricionista"));

                    b.Property<int>("AnosExperiencia")
                        .HasColumnType("int");

                    b.Property<string>("Especialidad")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdNutricionista");

                    b.HasIndex("IdPersona");

                    b.ToTable("Nutricionistas");
                });

            modelBuilder.Entity("Backend.Models.Paciente", b =>
                {
                    b.Property<int>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaciente"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<string>("Objetivo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("PesoInicial")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("PreferenciasAlimentarias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TallaInicial")
                        .HasColumnType("decimal(3,2)");

                    b.Property<string>("TipoSangre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPaciente");

                    b.HasIndex("IdPersona");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("Backend.Models.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersona"));

                    b.Property<string>("ApellidoMaterno")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CI")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdPersona");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Backend.Models.PlanNutricional", b =>
                {
                    b.Property<int>("IdPlan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlan"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdConsulta")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPlan");

                    b.HasIndex("IdConsulta");

                    b.ToTable("PlanesNutricionales");
                });

            modelBuilder.Entity("Backend.Models.Recomendacion", b =>
                {
                    b.Property<int>("IdRecomendacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRecomendacion"));

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdConsulta")
                        .HasColumnType("int");

                    b.HasKey("IdRecomendacion");

                    b.HasIndex("IdConsulta");

                    b.ToTable("Recomendaciones");
                });

            modelBuilder.Entity("Backend.Models.Recordatorio", b =>
                {
                    b.Property<int>("IdRecordatorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRecordatorio"));

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdRecordatorio");

                    b.HasIndex("IdPersona");

                    b.ToTable("Recordatorios");
                });

            modelBuilder.Entity("Backend.Models.RegistroActividad", b =>
                {
                    b.Property<int>("IdRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRegistro"));

                    b.Property<int>("DuracionMin")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdActividad")
                        .HasColumnType("int");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.HasKey("IdRegistro");

                    b.HasIndex("IdActividad");

                    b.HasIndex("IdPaciente");

                    b.ToTable("RegistrosActividades");
                });

            modelBuilder.Entity("Backend.Models.Comida", b =>
                {
                    b.HasOne("Backend.Models.PlanNutricional", "PlanNutricional")
                        .WithMany()
                        .HasForeignKey("IdPlan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanNutricional");
                });

            modelBuilder.Entity("Backend.Models.Consulta", b =>
                {
                    b.HasOne("Backend.Models.Nutricionista", "Nutricionista")
                        .WithMany()
                        .HasForeignKey("IdNutricionista")
                        .IsRequired();

                    b.HasOne("Backend.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .IsRequired();

                    b.Navigation("Nutricionista");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Backend.Models.Diagnostico", b =>
                {
                    b.HasOne("Backend.Models.Consulta", "Consulta")
                        .WithMany()
                        .HasForeignKey("IdConsulta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consulta");
                });

            modelBuilder.Entity("Backend.Models.HistorialMedico", b =>
                {
                    b.HasOne("Backend.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Backend.Models.HistorialPaciente", b =>
                {
                    b.HasOne("Backend.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Backend.Models.Nutricionista", b =>
                {
                    b.HasOne("Backend.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Backend.Models.Paciente", b =>
                {
                    b.HasOne("Backend.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Backend.Models.PlanNutricional", b =>
                {
                    b.HasOne("Backend.Models.Consulta", "Consulta")
                        .WithMany()
                        .HasForeignKey("IdConsulta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consulta");
                });

            modelBuilder.Entity("Backend.Models.Recomendacion", b =>
                {
                    b.HasOne("Backend.Models.Consulta", "Consulta")
                        .WithMany()
                        .HasForeignKey("IdConsulta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consulta");
                });

            modelBuilder.Entity("Backend.Models.Recordatorio", b =>
                {
                    b.HasOne("Backend.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("IdPersona")
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Backend.Models.RegistroActividad", b =>
                {
                    b.HasOne("Backend.Models.ActividadFisica", "Actividad")
                        .WithMany()
                        .HasForeignKey("IdActividad")
                        .IsRequired();

                    b.HasOne("Backend.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .IsRequired();

                    b.Navigation("Actividad");

                    b.Navigation("Paciente");
                });
#pragma warning restore 612, 618
        }
    }
}
